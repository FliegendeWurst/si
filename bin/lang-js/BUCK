load(
    "@prelude-si//:macros.bzl",
    "export_file",
    "nix_omnibus_pkg",
)
load(
    "@prelude-si//:deno.bzl",
    "deno_compile",
    "deno_format",
    "deno_test",
)

export_file(
    name = "package.json",
)

filegroup(
    name = "src",
    srcs = glob([
        "src/**/*.ts",
        "tsconfig.json",
    ]),
)

filegroup(
    name = "test_src",
    srcs = glob([
        "tests/**/*",
    ]),
)

prod_deps_srcs = {
    "lib/ts-lib-deno": "//lib/ts-lib-deno:src",
}

deno_compile(
    name = "bin",
    main = "src/index.ts",
    out = "lang-js",
    srcs = glob([
        "src/**/*.ts",
        "src/**/*.js",
    ]),
    permissions = [
        "allow-all",
    ],
    unstable_flags = [
        "worker-options",
    ],
    visibility = ["PUBLIC"],
)

deno_format(
    name = "fix-format",
    srcs = glob(["**/*.ts", "**/*.js"]),
    ignore = ["node_modules"],
)

deno_format(
    name = "check-format",
    srcs = glob(["**/*.ts", "**/*.js"]),
    check = True,
)

deno_test(
    name = "test-unit",
    srcs = glob(["**/*_test.ts", "**/*.test.ts"]),
    ignore = ["node_modules"],
)

dev_deps_srcs = {
    "lib/eslint-config": "//lib/eslint-config:src",
    "lib/tsconfig": "//lib/tsconfig:src",
}

nix_omnibus_pkg(
    name = "omnibus",
    pkg_name = "lang-js",
    build_dep = "//bin/lang-js:bin",
)
