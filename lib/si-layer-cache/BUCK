load("@prelude-si//:macros.bzl", "rust_library")

rust_library(
    name = "si-layer-cache",
    deps = [
        "//lib/si-data-nats:si-data-nats",
        "//lib/si-data-pg:si-data-pg",
        "//lib/si-std:si-std",
        "//third-party/rust:async-trait",
        "//third-party/rust:blake3",
        "//third-party/rust:bytes",
        "//third-party/rust:futures",
        "//third-party/rust:lazy_static",
        "//third-party/rust:moka",
        "//third-party/rust:postcard",
        "//third-party/rust:refinery",
        "//third-party/rust:remain",
        "//third-party/rust:serde",
        "//third-party/rust:sled",
        "//third-party/rust:tempfile",
        "//third-party/rust:thiserror",
        "//third-party/rust:tokio",
        "//third-party/rust:ulid",
    ],
    srcs = glob([
        "src/**/*.rs",
        "src/migrations/*.sql",
    ]),
    env = {
        "CARGO_MANIFEST_DIR": ".",
    },
)

rust_test(
    name = "test-integration",
    deps = [
        "//lib/buck2-resources:buck2-resources",
        "//lib/si-data-pg:si-data-pg",
        "//third-party/rust:criterion",
        "//third-party/rust:moka",
        "//third-party/rust:postcard",
        "//third-party/rust:sled",
        "//third-party/rust:tempfile",
        "//third-party/rust:tokio",
        ":si-layer-cache",
    ],
    srcs = glob([
        "tests/**/*.rs",
        "src/migrations/*.sql",
    ]),
    resources = {
        "dev.postgres.root.crt": "//config/keys:dev.postgres.root.crt",
    },
    crate_root = "tests/integration.rs",
    env = {
        "CARGO_PKG_NAME": "integration",
    },
)
