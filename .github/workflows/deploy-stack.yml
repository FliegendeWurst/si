name: Deploy Services

run-name:
  Deploy of ${{ inputs.service }} to ${{ inputs.environment }} by @${{
  github.actor }}

on:
  workflow_call:
    inputs:
      environment:
        type: string
        default: "tools"
      service:
        type: string
        default: "all"
      version:
        type: string
        default: "stable"
      deploy-type:
        type: string
        default: "instance"

  workflow_dispatch:
    inputs:
      environment:
        type: choice
        required: true
        description: "Where to deploy"
        default: "tools"
        options:
          - tools
          - production
      service:
        type: choice
        required: true
        description: "service to deploy"
        options:
          - all
          - pinga
          - rebaser
          - sdf
          - veritech
          - web
      version:
        type: string
        required: true
        description: "version to deploy"
        default: "stable"
      deploy-type:
        type: choice
        required: true
        description: "deployment variant"
        default: "instance"
        options:
          - binary
          - instance

jobs:
  set-init:
    uses: ./.github/workflows/set-init-version.yml
    with:
      environment: ${{ inputs.environment }}
      service: ${{ inputs.service }}
      version: ${{ inputs.version }}
    secrets: inherit

  define-deployment-matrix:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.services.outputs.services }}
    steps:
      - id: services
        run: |
          if [ "${{ inputs.service }}" = "all" ]; then
            echo 'services=["pinga", "rebaser", "sdf", "veritech", "web"]' >> "$GITHUB_OUTPUT"
          else
            echo 'services=["${{ inputs.service }}"]' >> "$GITHUB_OUTPUT"
          fi

  notify-start:
    name: Start Deployment Notification
    runs-on: ubuntu-latest
    if: inputs.environment == 'production'
    steps:
      - uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          nodetail: true
          title: "System Initiative Deployment Starting"
          description: |
            "We are making a deployment of System Initiative. The service will be disrupted for the next 10 minutes. We will post when it is complete."
          color: 0xff91a4

  deploy-services:
    needs: "define-deployment-matrix"
    strategy:
      fail-fast: false
      matrix:
        service:
          ${{ fromJSON(needs.define-deployment-matrix.outputs.services) }}
    uses: ./.github/workflows/deploy-service.yml
    with:
      environment: ${{ inputs.environment }}
      service: ${{ matrix.service }}
      version: ${{ inputs.version }}
      deploy-type: ${{ inputs.deploy-type }}
    secrets: inherit

  e2e-validation:
    # We want to ensure that in-progress cron runs against tools-prod
    # are canceled when we do a deploy so they don't fail erroneously
    concurrency:
      group: e2e-${{ inputs.environment }}
      cancel-in-progress: true
    needs: deploy-services
    uses: ./.github/workflows/e2e-validation.yml
    with:
      environment: ${{ inputs.environment }}
    secrets: inherit

  notify-end:
    name: Start Deployment Notification
    runs-on: ubuntu-latest
    if: inputs.environment == 'production'
    steps:
      - uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          nodetail: true
          title: "System Initiative Deployment Complete"
          description: |
            "Deployment has completed. Thank you for your patience."
          color: 0xff91a4
